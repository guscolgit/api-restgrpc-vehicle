// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: handlergrpc.proto

#include "handlergrpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_handlergrpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vehicle_handlergrpc_2eproto;
namespace handlergrpc {
class VehicleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vehicle> _instance;
} _Vehicle_default_instance_;
class HandlerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandlerRequest> _instance;
} _HandlerRequest_default_instance_;
class HandlerReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandlerReply> _instance;
} _HandlerReply_default_instance_;
class HandlerReplyGetByIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandlerReplyGetByID> _instance;
} _HandlerReplyGetByID_default_instance_;
class HandlerReplyGetByAreaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandlerReplyGetByArea> _instance;
} _HandlerReplyGetByArea_default_instance_;
}  // namespace handlergrpc
static void InitDefaultsVehicle_handlergrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::handlergrpc::_Vehicle_default_instance_;
    new (ptr) ::handlergrpc::Vehicle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::handlergrpc::Vehicle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vehicle_handlergrpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicle_handlergrpc_2eproto}, {}};

static void InitDefaultsHandlerRequest_handlergrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::handlergrpc::_HandlerRequest_default_instance_;
    new (ptr) ::handlergrpc::HandlerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::handlergrpc::HandlerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HandlerRequest_handlergrpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHandlerRequest_handlergrpc_2eproto}, {
      &scc_info_Vehicle_handlergrpc_2eproto.base,}};

static void InitDefaultsHandlerReply_handlergrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::handlergrpc::_HandlerReply_default_instance_;
    new (ptr) ::handlergrpc::HandlerReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::handlergrpc::HandlerReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HandlerReply_handlergrpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHandlerReply_handlergrpc_2eproto}, {}};

static void InitDefaultsHandlerReplyGetByID_handlergrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::handlergrpc::_HandlerReplyGetByID_default_instance_;
    new (ptr) ::handlergrpc::HandlerReplyGetByID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::handlergrpc::HandlerReplyGetByID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HandlerReplyGetByID_handlergrpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHandlerReplyGetByID_handlergrpc_2eproto}, {
      &scc_info_Vehicle_handlergrpc_2eproto.base,}};

static void InitDefaultsHandlerReplyGetByArea_handlergrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::handlergrpc::_HandlerReplyGetByArea_default_instance_;
    new (ptr) ::handlergrpc::HandlerReplyGetByArea();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::handlergrpc::HandlerReplyGetByArea::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HandlerReplyGetByArea_handlergrpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHandlerReplyGetByArea_handlergrpc_2eproto}, {
      &scc_info_Vehicle_handlergrpc_2eproto.base,}};

void InitDefaults_handlergrpc_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vehicle_handlergrpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HandlerRequest_handlergrpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HandlerReply_handlergrpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HandlerReplyGetByID_handlergrpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HandlerReplyGetByArea_handlergrpc_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_handlergrpc_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_handlergrpc_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_handlergrpc_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_handlergrpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::Vehicle, vehicleid_),
  PROTOBUF_FIELD_OFFSET(::handlergrpc::Vehicle, latitude_),
  PROTOBUF_FIELD_OFFSET(::handlergrpc::Vehicle, longitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerRequest, vehicle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerReply, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerReplyGetByID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerReplyGetByID, vehicle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerReplyGetByArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::handlergrpc::HandlerReplyGetByArea, vehicle_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::handlergrpc::Vehicle)},
  { 8, -1, sizeof(::handlergrpc::HandlerRequest)},
  { 14, -1, sizeof(::handlergrpc::HandlerReply)},
  { 20, -1, sizeof(::handlergrpc::HandlerReplyGetByID)},
  { 26, -1, sizeof(::handlergrpc::HandlerReplyGetByArea)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::handlergrpc::_Vehicle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::handlergrpc::_HandlerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::handlergrpc::_HandlerReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::handlergrpc::_HandlerReplyGetByID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::handlergrpc::_HandlerReplyGetByArea_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_handlergrpc_2eproto = {
  {}, AddDescriptors_handlergrpc_2eproto, "handlergrpc.proto", schemas,
  file_default_instances, TableStruct_handlergrpc_2eproto::offsets,
  file_level_metadata_handlergrpc_2eproto, 5, file_level_enum_descriptors_handlergrpc_2eproto, file_level_service_descriptors_handlergrpc_2eproto,
};

const char descriptor_table_protodef_handlergrpc_2eproto[] =
  "\n\021handlergrpc.proto\022\013handlergrpc\"A\n\007Vehi"
  "cle\022\021\n\tvehicleid\030\001 \001(\t\022\020\n\010latitude\030\002 \001(\001"
  "\022\021\n\tlongitude\030\003 \001(\001\"7\n\016HandlerRequest\022%\n"
  "\007vehicle\030\001 \001(\0132\024.handlergrpc.Vehicle\"\036\n\014"
  "HandlerReply\022\016\n\006result\030\001 \001(\t\"<\n\023HandlerR"
  "eplyGetByID\022%\n\007vehicle\030\001 \001(\0132\024.handlergr"
  "pc.Vehicle\">\n\025HandlerReplyGetByArea\022%\n\007v"
  "ehicle\030\001 \003(\0132\024.handlergrpc.Vehicle2\256\003\n\013H"
  "andlerGRPC\022M\n\021sendRequestInsert\022\033.handle"
  "rgrpc.HandlerRequest\032\031.handlergrpc.Handl"
  "erReply\"\000\022U\n\022sendRequestGetByID\022\033.handle"
  "rgrpc.HandlerRequest\032 .handlergrpc.Handl"
  "erReplyGetByID\"\000\022O\n\023sendRequestLocation\022"
  "\033.handlergrpc.HandlerRequest\032\031.handlergr"
  "pc.HandlerReply\"\000\022Y\n\024sendRequestGetByAre"
  "a\022\033.handlergrpc.HandlerRequest\032\".handler"
  "grpc.HandlerReplyGetByArea\"\000\022M\n\021sendRequ"
  "estDelete\022\033.handlergrpc.HandlerRequest\032\031"
  ".handlergrpc.HandlerReply\"\000B\t\n\007ex.grpcb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_handlergrpc_2eproto = {
  false, InitDefaults_handlergrpc_2eproto, 
  descriptor_table_protodef_handlergrpc_2eproto,
  "handlergrpc.proto", &assign_descriptors_table_handlergrpc_2eproto, 766,
};

void AddDescriptors_handlergrpc_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_handlergrpc_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_handlergrpc_2eproto = []() { AddDescriptors_handlergrpc_2eproto(); return true; }();
namespace handlergrpc {

// ===================================================================

void Vehicle::InitAsDefaultInstance() {
}
class Vehicle::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle::kVehicleidFieldNumber;
const int Vehicle::kLatitudeFieldNumber;
const int Vehicle::kLongitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle::Vehicle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:handlergrpc.Vehicle)
}
Vehicle::Vehicle(const Vehicle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vehicleid().size() > 0) {
    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:handlergrpc.Vehicle)
}

void Vehicle::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Vehicle_handlergrpc_2eproto.base);
  vehicleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
}

Vehicle::~Vehicle() {
  // @@protoc_insertion_point(destructor:handlergrpc.Vehicle)
  SharedDtor();
}

void Vehicle::SharedDtor() {
  vehicleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vehicle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vehicle& Vehicle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Vehicle_handlergrpc_2eproto.base);
  return *internal_default_instance();
}


void Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:handlergrpc.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Vehicle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Vehicle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string vehicleid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("handlergrpc.Vehicle.vehicleid");
        object = msg->mutable_vehicleid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // double latitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_latitude(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double longitude = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_longitude(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Vehicle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:handlergrpc.Vehicle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string vehicleid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "handlergrpc.Vehicle.vehicleid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:handlergrpc.Vehicle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:handlergrpc.Vehicle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Vehicle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:handlergrpc.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string vehicleid = 1;
  if (this->vehicleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "handlergrpc.Vehicle.vehicleid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vehicleid(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  // double longitude = 3;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->longitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:handlergrpc.Vehicle)
}

::google::protobuf::uint8* Vehicle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:handlergrpc.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string vehicleid = 1;
  if (this->vehicleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vehicleid().data(), static_cast<int>(this->vehicleid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "handlergrpc.Vehicle.vehicleid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vehicleid(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  // double longitude = 3;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->longitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:handlergrpc.Vehicle)
  return target;
}

size_t Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:handlergrpc.Vehicle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string vehicleid = 1;
  if (this->vehicleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vehicleid());
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // double longitude = 3;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehicle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:handlergrpc.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle* source =
      ::google::protobuf::DynamicCastToGenerated<Vehicle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:handlergrpc.Vehicle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:handlergrpc.Vehicle)
    MergeFrom(*source);
  }
}

void Vehicle::MergeFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:handlergrpc.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vehicleid().size() > 0) {

    vehicleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicleid_);
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
}

void Vehicle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:handlergrpc.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle::CopyFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:handlergrpc.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle::IsInitialized() const {
  return true;
}

void Vehicle::Swap(Vehicle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle::InternalSwap(Vehicle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  vehicleid_.Swap(&other->vehicleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
}

::google::protobuf::Metadata Vehicle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_handlergrpc_2eproto);
  return ::file_level_metadata_handlergrpc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HandlerRequest::InitAsDefaultInstance() {
  ::handlergrpc::_HandlerRequest_default_instance_._instance.get_mutable()->vehicle_ = const_cast< ::handlergrpc::Vehicle*>(
      ::handlergrpc::Vehicle::internal_default_instance());
}
class HandlerRequest::HasBitSetters {
 public:
  static const ::handlergrpc::Vehicle& vehicle(const HandlerRequest* msg);
};

const ::handlergrpc::Vehicle&
HandlerRequest::HasBitSetters::vehicle(const HandlerRequest* msg) {
  return *msg->vehicle_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandlerRequest::kVehicleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandlerRequest::HandlerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:handlergrpc.HandlerRequest)
}
HandlerRequest::HandlerRequest(const HandlerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vehicle()) {
    vehicle_ = new ::handlergrpc::Vehicle(*from.vehicle_);
  } else {
    vehicle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:handlergrpc.HandlerRequest)
}

void HandlerRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HandlerRequest_handlergrpc_2eproto.base);
  vehicle_ = nullptr;
}

HandlerRequest::~HandlerRequest() {
  // @@protoc_insertion_point(destructor:handlergrpc.HandlerRequest)
  SharedDtor();
}

void HandlerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete vehicle_;
}

void HandlerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandlerRequest& HandlerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HandlerRequest_handlergrpc_2eproto.base);
  return *internal_default_instance();
}


void HandlerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:handlergrpc.HandlerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && vehicle_ != nullptr) {
    delete vehicle_;
  }
  vehicle_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HandlerRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HandlerRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .handlergrpc.Vehicle vehicle = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::handlergrpc::Vehicle::_InternalParse;
        object = msg->mutable_vehicle();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HandlerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:handlergrpc.HandlerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .handlergrpc.Vehicle vehicle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:handlergrpc.HandlerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:handlergrpc.HandlerRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HandlerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:handlergrpc.HandlerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .handlergrpc.Vehicle vehicle = 1;
  if (this->has_vehicle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::vehicle(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:handlergrpc.HandlerRequest)
}

::google::protobuf::uint8* HandlerRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:handlergrpc.HandlerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .handlergrpc.Vehicle vehicle = 1;
  if (this->has_vehicle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::vehicle(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:handlergrpc.HandlerRequest)
  return target;
}

size_t HandlerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:handlergrpc.HandlerRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .handlergrpc.Vehicle vehicle = 1;
  if (this->has_vehicle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandlerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:handlergrpc.HandlerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HandlerRequest* source =
      ::google::protobuf::DynamicCastToGenerated<HandlerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:handlergrpc.HandlerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:handlergrpc.HandlerRequest)
    MergeFrom(*source);
  }
}

void HandlerRequest::MergeFrom(const HandlerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:handlergrpc.HandlerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vehicle()) {
    mutable_vehicle()->::handlergrpc::Vehicle::MergeFrom(from.vehicle());
  }
}

void HandlerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:handlergrpc.HandlerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandlerRequest::CopyFrom(const HandlerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:handlergrpc.HandlerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlerRequest::IsInitialized() const {
  return true;
}

void HandlerRequest::Swap(HandlerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandlerRequest::InternalSwap(HandlerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(vehicle_, other->vehicle_);
}

::google::protobuf::Metadata HandlerRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_handlergrpc_2eproto);
  return ::file_level_metadata_handlergrpc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HandlerReply::InitAsDefaultInstance() {
}
class HandlerReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandlerReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandlerReply::HandlerReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:handlergrpc.HandlerReply)
}
HandlerReply::HandlerReply(const HandlerReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  // @@protoc_insertion_point(copy_constructor:handlergrpc.HandlerReply)
}

void HandlerReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HandlerReply_handlergrpc_2eproto.base);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HandlerReply::~HandlerReply() {
  // @@protoc_insertion_point(destructor:handlergrpc.HandlerReply)
  SharedDtor();
}

void HandlerReply::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HandlerReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandlerReply& HandlerReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HandlerReply_handlergrpc_2eproto.base);
  return *internal_default_instance();
}


void HandlerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:handlergrpc.HandlerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HandlerReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HandlerReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("handlergrpc.HandlerReply.result");
        object = msg->mutable_result();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HandlerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:handlergrpc.HandlerReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "handlergrpc.HandlerReply.result"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:handlergrpc.HandlerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:handlergrpc.HandlerReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HandlerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:handlergrpc.HandlerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "handlergrpc.HandlerReply.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:handlergrpc.HandlerReply)
}

::google::protobuf::uint8* HandlerReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:handlergrpc.HandlerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "handlergrpc.HandlerReply.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:handlergrpc.HandlerReply)
  return target;
}

size_t HandlerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:handlergrpc.HandlerReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandlerReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:handlergrpc.HandlerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HandlerReply* source =
      ::google::protobuf::DynamicCastToGenerated<HandlerReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:handlergrpc.HandlerReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:handlergrpc.HandlerReply)
    MergeFrom(*source);
  }
}

void HandlerReply::MergeFrom(const HandlerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:handlergrpc.HandlerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void HandlerReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:handlergrpc.HandlerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandlerReply::CopyFrom(const HandlerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:handlergrpc.HandlerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlerReply::IsInitialized() const {
  return true;
}

void HandlerReply::Swap(HandlerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandlerReply::InternalSwap(HandlerReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata HandlerReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_handlergrpc_2eproto);
  return ::file_level_metadata_handlergrpc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HandlerReplyGetByID::InitAsDefaultInstance() {
  ::handlergrpc::_HandlerReplyGetByID_default_instance_._instance.get_mutable()->vehicle_ = const_cast< ::handlergrpc::Vehicle*>(
      ::handlergrpc::Vehicle::internal_default_instance());
}
class HandlerReplyGetByID::HasBitSetters {
 public:
  static const ::handlergrpc::Vehicle& vehicle(const HandlerReplyGetByID* msg);
};

const ::handlergrpc::Vehicle&
HandlerReplyGetByID::HasBitSetters::vehicle(const HandlerReplyGetByID* msg) {
  return *msg->vehicle_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandlerReplyGetByID::kVehicleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandlerReplyGetByID::HandlerReplyGetByID()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:handlergrpc.HandlerReplyGetByID)
}
HandlerReplyGetByID::HandlerReplyGetByID(const HandlerReplyGetByID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vehicle()) {
    vehicle_ = new ::handlergrpc::Vehicle(*from.vehicle_);
  } else {
    vehicle_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:handlergrpc.HandlerReplyGetByID)
}

void HandlerReplyGetByID::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HandlerReplyGetByID_handlergrpc_2eproto.base);
  vehicle_ = nullptr;
}

HandlerReplyGetByID::~HandlerReplyGetByID() {
  // @@protoc_insertion_point(destructor:handlergrpc.HandlerReplyGetByID)
  SharedDtor();
}

void HandlerReplyGetByID::SharedDtor() {
  if (this != internal_default_instance()) delete vehicle_;
}

void HandlerReplyGetByID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandlerReplyGetByID& HandlerReplyGetByID::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HandlerReplyGetByID_handlergrpc_2eproto.base);
  return *internal_default_instance();
}


void HandlerReplyGetByID::Clear() {
// @@protoc_insertion_point(message_clear_start:handlergrpc.HandlerReplyGetByID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && vehicle_ != nullptr) {
    delete vehicle_;
  }
  vehicle_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HandlerReplyGetByID::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HandlerReplyGetByID*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .handlergrpc.Vehicle vehicle = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::handlergrpc::Vehicle::_InternalParse;
        object = msg->mutable_vehicle();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HandlerReplyGetByID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:handlergrpc.HandlerReplyGetByID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .handlergrpc.Vehicle vehicle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:handlergrpc.HandlerReplyGetByID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:handlergrpc.HandlerReplyGetByID)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HandlerReplyGetByID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:handlergrpc.HandlerReplyGetByID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .handlergrpc.Vehicle vehicle = 1;
  if (this->has_vehicle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::vehicle(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:handlergrpc.HandlerReplyGetByID)
}

::google::protobuf::uint8* HandlerReplyGetByID::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:handlergrpc.HandlerReplyGetByID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .handlergrpc.Vehicle vehicle = 1;
  if (this->has_vehicle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::vehicle(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:handlergrpc.HandlerReplyGetByID)
  return target;
}

size_t HandlerReplyGetByID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:handlergrpc.HandlerReplyGetByID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .handlergrpc.Vehicle vehicle = 1;
  if (this->has_vehicle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandlerReplyGetByID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:handlergrpc.HandlerReplyGetByID)
  GOOGLE_DCHECK_NE(&from, this);
  const HandlerReplyGetByID* source =
      ::google::protobuf::DynamicCastToGenerated<HandlerReplyGetByID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:handlergrpc.HandlerReplyGetByID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:handlergrpc.HandlerReplyGetByID)
    MergeFrom(*source);
  }
}

void HandlerReplyGetByID::MergeFrom(const HandlerReplyGetByID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:handlergrpc.HandlerReplyGetByID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vehicle()) {
    mutable_vehicle()->::handlergrpc::Vehicle::MergeFrom(from.vehicle());
  }
}

void HandlerReplyGetByID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:handlergrpc.HandlerReplyGetByID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandlerReplyGetByID::CopyFrom(const HandlerReplyGetByID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:handlergrpc.HandlerReplyGetByID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlerReplyGetByID::IsInitialized() const {
  return true;
}

void HandlerReplyGetByID::Swap(HandlerReplyGetByID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandlerReplyGetByID::InternalSwap(HandlerReplyGetByID* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(vehicle_, other->vehicle_);
}

::google::protobuf::Metadata HandlerReplyGetByID::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_handlergrpc_2eproto);
  return ::file_level_metadata_handlergrpc_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HandlerReplyGetByArea::InitAsDefaultInstance() {
}
class HandlerReplyGetByArea::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandlerReplyGetByArea::kVehicleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandlerReplyGetByArea::HandlerReplyGetByArea()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:handlergrpc.HandlerReplyGetByArea)
}
HandlerReplyGetByArea::HandlerReplyGetByArea(const HandlerReplyGetByArea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      vehicle_(from.vehicle_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:handlergrpc.HandlerReplyGetByArea)
}

void HandlerReplyGetByArea::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HandlerReplyGetByArea_handlergrpc_2eproto.base);
}

HandlerReplyGetByArea::~HandlerReplyGetByArea() {
  // @@protoc_insertion_point(destructor:handlergrpc.HandlerReplyGetByArea)
  SharedDtor();
}

void HandlerReplyGetByArea::SharedDtor() {
}

void HandlerReplyGetByArea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HandlerReplyGetByArea& HandlerReplyGetByArea::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HandlerReplyGetByArea_handlergrpc_2eproto.base);
  return *internal_default_instance();
}


void HandlerReplyGetByArea::Clear() {
// @@protoc_insertion_point(message_clear_start:handlergrpc.HandlerReplyGetByArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vehicle_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HandlerReplyGetByArea::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HandlerReplyGetByArea*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .handlergrpc.Vehicle vehicle = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::handlergrpc::Vehicle::_InternalParse;
          object = msg->add_vehicle();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HandlerReplyGetByArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:handlergrpc.HandlerReplyGetByArea)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .handlergrpc.Vehicle vehicle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:handlergrpc.HandlerReplyGetByArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:handlergrpc.HandlerReplyGetByArea)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HandlerReplyGetByArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:handlergrpc.HandlerReplyGetByArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .handlergrpc.Vehicle vehicle = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vehicle(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:handlergrpc.HandlerReplyGetByArea)
}

::google::protobuf::uint8* HandlerReplyGetByArea::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:handlergrpc.HandlerReplyGetByArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .handlergrpc.Vehicle vehicle = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vehicle(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:handlergrpc.HandlerReplyGetByArea)
  return target;
}

size_t HandlerReplyGetByArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:handlergrpc.HandlerReplyGetByArea)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .handlergrpc.Vehicle vehicle = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicle(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandlerReplyGetByArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:handlergrpc.HandlerReplyGetByArea)
  GOOGLE_DCHECK_NE(&from, this);
  const HandlerReplyGetByArea* source =
      ::google::protobuf::DynamicCastToGenerated<HandlerReplyGetByArea>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:handlergrpc.HandlerReplyGetByArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:handlergrpc.HandlerReplyGetByArea)
    MergeFrom(*source);
  }
}

void HandlerReplyGetByArea::MergeFrom(const HandlerReplyGetByArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:handlergrpc.HandlerReplyGetByArea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vehicle_.MergeFrom(from.vehicle_);
}

void HandlerReplyGetByArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:handlergrpc.HandlerReplyGetByArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandlerReplyGetByArea::CopyFrom(const HandlerReplyGetByArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:handlergrpc.HandlerReplyGetByArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlerReplyGetByArea::IsInitialized() const {
  return true;
}

void HandlerReplyGetByArea::Swap(HandlerReplyGetByArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandlerReplyGetByArea::InternalSwap(HandlerReplyGetByArea* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&vehicle_)->InternalSwap(CastToBase(&other->vehicle_));
}

::google::protobuf::Metadata HandlerReplyGetByArea::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_handlergrpc_2eproto);
  return ::file_level_metadata_handlergrpc_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace handlergrpc
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::handlergrpc::Vehicle* Arena::CreateMaybeMessage< ::handlergrpc::Vehicle >(Arena* arena) {
  return Arena::CreateInternal< ::handlergrpc::Vehicle >(arena);
}
template<> PROTOBUF_NOINLINE ::handlergrpc::HandlerRequest* Arena::CreateMaybeMessage< ::handlergrpc::HandlerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::handlergrpc::HandlerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::handlergrpc::HandlerReply* Arena::CreateMaybeMessage< ::handlergrpc::HandlerReply >(Arena* arena) {
  return Arena::CreateInternal< ::handlergrpc::HandlerReply >(arena);
}
template<> PROTOBUF_NOINLINE ::handlergrpc::HandlerReplyGetByID* Arena::CreateMaybeMessage< ::handlergrpc::HandlerReplyGetByID >(Arena* arena) {
  return Arena::CreateInternal< ::handlergrpc::HandlerReplyGetByID >(arena);
}
template<> PROTOBUF_NOINLINE ::handlergrpc::HandlerReplyGetByArea* Arena::CreateMaybeMessage< ::handlergrpc::HandlerReplyGetByArea >(Arena* arena) {
  return Arena::CreateInternal< ::handlergrpc::HandlerReplyGetByArea >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
