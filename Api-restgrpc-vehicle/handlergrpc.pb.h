// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: handlergrpc.proto

#ifndef PROTOBUF_INCLUDED_handlergrpc_2eproto
#define PROTOBUF_INCLUDED_handlergrpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_handlergrpc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_handlergrpc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_handlergrpc_2eproto();
namespace handlergrpc {
class HandlerReply;
class HandlerReplyDefaultTypeInternal;
extern HandlerReplyDefaultTypeInternal _HandlerReply_default_instance_;
class HandlerReplyGetByArea;
class HandlerReplyGetByAreaDefaultTypeInternal;
extern HandlerReplyGetByAreaDefaultTypeInternal _HandlerReplyGetByArea_default_instance_;
class HandlerReplyGetByID;
class HandlerReplyGetByIDDefaultTypeInternal;
extern HandlerReplyGetByIDDefaultTypeInternal _HandlerReplyGetByID_default_instance_;
class HandlerRequest;
class HandlerRequestDefaultTypeInternal;
extern HandlerRequestDefaultTypeInternal _HandlerRequest_default_instance_;
class Vehicle;
class VehicleDefaultTypeInternal;
extern VehicleDefaultTypeInternal _Vehicle_default_instance_;
}  // namespace handlergrpc
namespace google {
namespace protobuf {
template<> ::handlergrpc::HandlerReply* Arena::CreateMaybeMessage<::handlergrpc::HandlerReply>(Arena*);
template<> ::handlergrpc::HandlerReplyGetByArea* Arena::CreateMaybeMessage<::handlergrpc::HandlerReplyGetByArea>(Arena*);
template<> ::handlergrpc::HandlerReplyGetByID* Arena::CreateMaybeMessage<::handlergrpc::HandlerReplyGetByID>(Arena*);
template<> ::handlergrpc::HandlerRequest* Arena::CreateMaybeMessage<::handlergrpc::HandlerRequest>(Arena*);
template<> ::handlergrpc::Vehicle* Arena::CreateMaybeMessage<::handlergrpc::Vehicle>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace handlergrpc {

// ===================================================================

class Vehicle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:handlergrpc.Vehicle) */ {
 public:
  Vehicle();
  virtual ~Vehicle();

  Vehicle(const Vehicle& from);

  inline Vehicle& operator=(const Vehicle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vehicle(Vehicle&& from) noexcept
    : Vehicle() {
    *this = ::std::move(from);
  }

  inline Vehicle& operator=(Vehicle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Vehicle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vehicle* internal_default_instance() {
    return reinterpret_cast<const Vehicle*>(
               &_Vehicle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Vehicle* other);
  friend void swap(Vehicle& a, Vehicle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vehicle* New() const final {
    return CreateMaybeMessage<Vehicle>(nullptr);
  }

  Vehicle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vehicle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vehicle& from);
  void MergeFrom(const Vehicle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vehicle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vehicleid = 1;
  void clear_vehicleid();
  static const int kVehicleidFieldNumber = 1;
  const ::std::string& vehicleid() const;
  void set_vehicleid(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicleid(::std::string&& value);
  #endif
  void set_vehicleid(const char* value);
  void set_vehicleid(const char* value, size_t size);
  ::std::string* mutable_vehicleid();
  ::std::string* release_vehicleid();
  void set_allocated_vehicleid(::std::string* vehicleid);

  // double latitude = 2;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  double latitude() const;
  void set_latitude(double value);

  // double longitude = 3;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  double longitude() const;
  void set_longitude(double value);

  // @@protoc_insertion_point(class_scope:handlergrpc.Vehicle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vehicleid_;
  double latitude_;
  double longitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_handlergrpc_2eproto;
};
// -------------------------------------------------------------------

class HandlerRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:handlergrpc.HandlerRequest) */ {
 public:
  HandlerRequest();
  virtual ~HandlerRequest();

  HandlerRequest(const HandlerRequest& from);

  inline HandlerRequest& operator=(const HandlerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandlerRequest(HandlerRequest&& from) noexcept
    : HandlerRequest() {
    *this = ::std::move(from);
  }

  inline HandlerRequest& operator=(HandlerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HandlerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HandlerRequest* internal_default_instance() {
    return reinterpret_cast<const HandlerRequest*>(
               &_HandlerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HandlerRequest* other);
  friend void swap(HandlerRequest& a, HandlerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandlerRequest* New() const final {
    return CreateMaybeMessage<HandlerRequest>(nullptr);
  }

  HandlerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HandlerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HandlerRequest& from);
  void MergeFrom(const HandlerRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HandlerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .handlergrpc.Vehicle vehicle = 1;
  bool has_vehicle() const;
  void clear_vehicle();
  static const int kVehicleFieldNumber = 1;
  const ::handlergrpc::Vehicle& vehicle() const;
  ::handlergrpc::Vehicle* release_vehicle();
  ::handlergrpc::Vehicle* mutable_vehicle();
  void set_allocated_vehicle(::handlergrpc::Vehicle* vehicle);

  // @@protoc_insertion_point(class_scope:handlergrpc.HandlerRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::handlergrpc::Vehicle* vehicle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_handlergrpc_2eproto;
};
// -------------------------------------------------------------------

class HandlerReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:handlergrpc.HandlerReply) */ {
 public:
  HandlerReply();
  virtual ~HandlerReply();

  HandlerReply(const HandlerReply& from);

  inline HandlerReply& operator=(const HandlerReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandlerReply(HandlerReply&& from) noexcept
    : HandlerReply() {
    *this = ::std::move(from);
  }

  inline HandlerReply& operator=(HandlerReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HandlerReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HandlerReply* internal_default_instance() {
    return reinterpret_cast<const HandlerReply*>(
               &_HandlerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HandlerReply* other);
  friend void swap(HandlerReply& a, HandlerReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandlerReply* New() const final {
    return CreateMaybeMessage<HandlerReply>(nullptr);
  }

  HandlerReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HandlerReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HandlerReply& from);
  void MergeFrom(const HandlerReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HandlerReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:handlergrpc.HandlerReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_handlergrpc_2eproto;
};
// -------------------------------------------------------------------

class HandlerReplyGetByID final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:handlergrpc.HandlerReplyGetByID) */ {
 public:
  HandlerReplyGetByID();
  virtual ~HandlerReplyGetByID();

  HandlerReplyGetByID(const HandlerReplyGetByID& from);

  inline HandlerReplyGetByID& operator=(const HandlerReplyGetByID& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandlerReplyGetByID(HandlerReplyGetByID&& from) noexcept
    : HandlerReplyGetByID() {
    *this = ::std::move(from);
  }

  inline HandlerReplyGetByID& operator=(HandlerReplyGetByID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HandlerReplyGetByID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HandlerReplyGetByID* internal_default_instance() {
    return reinterpret_cast<const HandlerReplyGetByID*>(
               &_HandlerReplyGetByID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HandlerReplyGetByID* other);
  friend void swap(HandlerReplyGetByID& a, HandlerReplyGetByID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandlerReplyGetByID* New() const final {
    return CreateMaybeMessage<HandlerReplyGetByID>(nullptr);
  }

  HandlerReplyGetByID* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HandlerReplyGetByID>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HandlerReplyGetByID& from);
  void MergeFrom(const HandlerReplyGetByID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HandlerReplyGetByID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .handlergrpc.Vehicle vehicle = 1;
  bool has_vehicle() const;
  void clear_vehicle();
  static const int kVehicleFieldNumber = 1;
  const ::handlergrpc::Vehicle& vehicle() const;
  ::handlergrpc::Vehicle* release_vehicle();
  ::handlergrpc::Vehicle* mutable_vehicle();
  void set_allocated_vehicle(::handlergrpc::Vehicle* vehicle);

  // @@protoc_insertion_point(class_scope:handlergrpc.HandlerReplyGetByID)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::handlergrpc::Vehicle* vehicle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_handlergrpc_2eproto;
};
// -------------------------------------------------------------------

class HandlerReplyGetByArea final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:handlergrpc.HandlerReplyGetByArea) */ {
 public:
  HandlerReplyGetByArea();
  virtual ~HandlerReplyGetByArea();

  HandlerReplyGetByArea(const HandlerReplyGetByArea& from);

  inline HandlerReplyGetByArea& operator=(const HandlerReplyGetByArea& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandlerReplyGetByArea(HandlerReplyGetByArea&& from) noexcept
    : HandlerReplyGetByArea() {
    *this = ::std::move(from);
  }

  inline HandlerReplyGetByArea& operator=(HandlerReplyGetByArea&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HandlerReplyGetByArea& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HandlerReplyGetByArea* internal_default_instance() {
    return reinterpret_cast<const HandlerReplyGetByArea*>(
               &_HandlerReplyGetByArea_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(HandlerReplyGetByArea* other);
  friend void swap(HandlerReplyGetByArea& a, HandlerReplyGetByArea& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandlerReplyGetByArea* New() const final {
    return CreateMaybeMessage<HandlerReplyGetByArea>(nullptr);
  }

  HandlerReplyGetByArea* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HandlerReplyGetByArea>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HandlerReplyGetByArea& from);
  void MergeFrom(const HandlerReplyGetByArea& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HandlerReplyGetByArea* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .handlergrpc.Vehicle vehicle = 1;
  int vehicle_size() const;
  void clear_vehicle();
  static const int kVehicleFieldNumber = 1;
  ::handlergrpc::Vehicle* mutable_vehicle(int index);
  ::google::protobuf::RepeatedPtrField< ::handlergrpc::Vehicle >*
      mutable_vehicle();
  const ::handlergrpc::Vehicle& vehicle(int index) const;
  ::handlergrpc::Vehicle* add_vehicle();
  const ::google::protobuf::RepeatedPtrField< ::handlergrpc::Vehicle >&
      vehicle() const;

  // @@protoc_insertion_point(class_scope:handlergrpc.HandlerReplyGetByArea)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::handlergrpc::Vehicle > vehicle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_handlergrpc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Vehicle

// string vehicleid = 1;
inline void Vehicle::clear_vehicleid() {
  vehicleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Vehicle::vehicleid() const {
  // @@protoc_insertion_point(field_get:handlergrpc.Vehicle.vehicleid)
  return vehicleid_.GetNoArena();
}
inline void Vehicle::set_vehicleid(const ::std::string& value) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:handlergrpc.Vehicle.vehicleid)
}
#if LANG_CXX11
inline void Vehicle::set_vehicleid(::std::string&& value) {
  
  vehicleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:handlergrpc.Vehicle.vehicleid)
}
#endif
inline void Vehicle::set_vehicleid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:handlergrpc.Vehicle.vehicleid)
}
inline void Vehicle::set_vehicleid(const char* value, size_t size) {
  
  vehicleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:handlergrpc.Vehicle.vehicleid)
}
inline ::std::string* Vehicle::mutable_vehicleid() {
  
  // @@protoc_insertion_point(field_mutable:handlergrpc.Vehicle.vehicleid)
  return vehicleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Vehicle::release_vehicleid() {
  // @@protoc_insertion_point(field_release:handlergrpc.Vehicle.vehicleid)
  
  return vehicleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Vehicle::set_allocated_vehicleid(::std::string* vehicleid) {
  if (vehicleid != nullptr) {
    
  } else {
    
  }
  vehicleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicleid);
  // @@protoc_insertion_point(field_set_allocated:handlergrpc.Vehicle.vehicleid)
}

// double latitude = 2;
inline void Vehicle::clear_latitude() {
  latitude_ = 0;
}
inline double Vehicle::latitude() const {
  // @@protoc_insertion_point(field_get:handlergrpc.Vehicle.latitude)
  return latitude_;
}
inline void Vehicle::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:handlergrpc.Vehicle.latitude)
}

// double longitude = 3;
inline void Vehicle::clear_longitude() {
  longitude_ = 0;
}
inline double Vehicle::longitude() const {
  // @@protoc_insertion_point(field_get:handlergrpc.Vehicle.longitude)
  return longitude_;
}
inline void Vehicle::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:handlergrpc.Vehicle.longitude)
}

// -------------------------------------------------------------------

// HandlerRequest

// .handlergrpc.Vehicle vehicle = 1;
inline bool HandlerRequest::has_vehicle() const {
  return this != internal_default_instance() && vehicle_ != nullptr;
}
inline void HandlerRequest::clear_vehicle() {
  if (GetArenaNoVirtual() == nullptr && vehicle_ != nullptr) {
    delete vehicle_;
  }
  vehicle_ = nullptr;
}
inline const ::handlergrpc::Vehicle& HandlerRequest::vehicle() const {
  const ::handlergrpc::Vehicle* p = vehicle_;
  // @@protoc_insertion_point(field_get:handlergrpc.HandlerRequest.vehicle)
  return p != nullptr ? *p : *reinterpret_cast<const ::handlergrpc::Vehicle*>(
      &::handlergrpc::_Vehicle_default_instance_);
}
inline ::handlergrpc::Vehicle* HandlerRequest::release_vehicle() {
  // @@protoc_insertion_point(field_release:handlergrpc.HandlerRequest.vehicle)
  
  ::handlergrpc::Vehicle* temp = vehicle_;
  vehicle_ = nullptr;
  return temp;
}
inline ::handlergrpc::Vehicle* HandlerRequest::mutable_vehicle() {
  
  if (vehicle_ == nullptr) {
    auto* p = CreateMaybeMessage<::handlergrpc::Vehicle>(GetArenaNoVirtual());
    vehicle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:handlergrpc.HandlerRequest.vehicle)
  return vehicle_;
}
inline void HandlerRequest::set_allocated_vehicle(::handlergrpc::Vehicle* vehicle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vehicle_;
  }
  if (vehicle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vehicle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_ = vehicle;
  // @@protoc_insertion_point(field_set_allocated:handlergrpc.HandlerRequest.vehicle)
}

// -------------------------------------------------------------------

// HandlerReply

// string result = 1;
inline void HandlerReply::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandlerReply::result() const {
  // @@protoc_insertion_point(field_get:handlergrpc.HandlerReply.result)
  return result_.GetNoArena();
}
inline void HandlerReply::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:handlergrpc.HandlerReply.result)
}
#if LANG_CXX11
inline void HandlerReply::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:handlergrpc.HandlerReply.result)
}
#endif
inline void HandlerReply::set_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:handlergrpc.HandlerReply.result)
}
inline void HandlerReply::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:handlergrpc.HandlerReply.result)
}
inline ::std::string* HandlerReply::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:handlergrpc.HandlerReply.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandlerReply::release_result() {
  // @@protoc_insertion_point(field_release:handlergrpc.HandlerReply.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandlerReply::set_allocated_result(::std::string* result) {
  if (result != nullptr) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:handlergrpc.HandlerReply.result)
}

// -------------------------------------------------------------------

// HandlerReplyGetByID

// .handlergrpc.Vehicle vehicle = 1;
inline bool HandlerReplyGetByID::has_vehicle() const {
  return this != internal_default_instance() && vehicle_ != nullptr;
}
inline void HandlerReplyGetByID::clear_vehicle() {
  if (GetArenaNoVirtual() == nullptr && vehicle_ != nullptr) {
    delete vehicle_;
  }
  vehicle_ = nullptr;
}
inline const ::handlergrpc::Vehicle& HandlerReplyGetByID::vehicle() const {
  const ::handlergrpc::Vehicle* p = vehicle_;
  // @@protoc_insertion_point(field_get:handlergrpc.HandlerReplyGetByID.vehicle)
  return p != nullptr ? *p : *reinterpret_cast<const ::handlergrpc::Vehicle*>(
      &::handlergrpc::_Vehicle_default_instance_);
}
inline ::handlergrpc::Vehicle* HandlerReplyGetByID::release_vehicle() {
  // @@protoc_insertion_point(field_release:handlergrpc.HandlerReplyGetByID.vehicle)
  
  ::handlergrpc::Vehicle* temp = vehicle_;
  vehicle_ = nullptr;
  return temp;
}
inline ::handlergrpc::Vehicle* HandlerReplyGetByID::mutable_vehicle() {
  
  if (vehicle_ == nullptr) {
    auto* p = CreateMaybeMessage<::handlergrpc::Vehicle>(GetArenaNoVirtual());
    vehicle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:handlergrpc.HandlerReplyGetByID.vehicle)
  return vehicle_;
}
inline void HandlerReplyGetByID::set_allocated_vehicle(::handlergrpc::Vehicle* vehicle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vehicle_;
  }
  if (vehicle) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vehicle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_ = vehicle;
  // @@protoc_insertion_point(field_set_allocated:handlergrpc.HandlerReplyGetByID.vehicle)
}

// -------------------------------------------------------------------

// HandlerReplyGetByArea

// repeated .handlergrpc.Vehicle vehicle = 1;
inline int HandlerReplyGetByArea::vehicle_size() const {
  return vehicle_.size();
}
inline void HandlerReplyGetByArea::clear_vehicle() {
  vehicle_.Clear();
}
inline ::handlergrpc::Vehicle* HandlerReplyGetByArea::mutable_vehicle(int index) {
  // @@protoc_insertion_point(field_mutable:handlergrpc.HandlerReplyGetByArea.vehicle)
  return vehicle_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::handlergrpc::Vehicle >*
HandlerReplyGetByArea::mutable_vehicle() {
  // @@protoc_insertion_point(field_mutable_list:handlergrpc.HandlerReplyGetByArea.vehicle)
  return &vehicle_;
}
inline const ::handlergrpc::Vehicle& HandlerReplyGetByArea::vehicle(int index) const {
  // @@protoc_insertion_point(field_get:handlergrpc.HandlerReplyGetByArea.vehicle)
  return vehicle_.Get(index);
}
inline ::handlergrpc::Vehicle* HandlerReplyGetByArea::add_vehicle() {
  // @@protoc_insertion_point(field_add:handlergrpc.HandlerReplyGetByArea.vehicle)
  return vehicle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::handlergrpc::Vehicle >&
HandlerReplyGetByArea::vehicle() const {
  // @@protoc_insertion_point(field_list:handlergrpc.HandlerReplyGetByArea.vehicle)
  return vehicle_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace handlergrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_handlergrpc_2eproto
